library(mirt)
fscores
setwd('/Users/juanliu/Documents/GitHub/YQzuoye')
setwd('/Users/juanliu/Documents/GitHub/YQzuoye')
setwd('/Users/juanliu/Documents/GitHub/YQzuoye')
setwd('/Users/juanliu/Documents/GitHub/YQzuoye')
setwd('/Users/juanliu/Documents/GitHub/YQzuoye')
setwd('/Users/juanliu/Documents/GitHub/YQzuoye')
getwd()
setwd('/Users/juanliu/Documents/GitHub/YQzuoye')
setwd('/Users/juanliu/Documents/GitHub/YQzuoye')
setwd('/Users/juanliu/Documents/GitHub')
setwd('/Users/juanliu/Documents/GitHub/YQzuoye')
setwd('/Users/juanliu/Documents/GitHub/YQzuoye')
getwd()
setwd("/Users/juanliu/Nutstore Files/单校运营项目")
setwd('/Users/juanliu/Documents/GitHub/YQzuoye')
setwd('/Users/juanliu/Documents/GitHub')
setwd('Documents/GitHub/YQzuoye')
setwd('/Users/juanliu/Documents/GitHub/YQzuoye')
getwd()
setwd("~/Documents/GitHub/YQzuoye")
setwd("~/Documents/GitHub/YQzuoye")
setwd("~/Documents/GitHub")
setwd("~/Documents/GitHub/YQzuoye")
styler:::style_selection()
styler:::style_active_file()
styler:::style_active_file()
library(YQzuoye)
hlm_value_added
cap_outlier(c(40,52,65,75,86,97))
to_z_p
zto3
torank
hlm_value_added
#保留两位便捷函数
mean2(4.5567)
sd2(rnorm(100))
# 四舍五入
round2(1.338,3)
# 四舍五入
round2(1.3389,3)
# 四舍五入
round2(1.3385,3)
# 四舍五入
round2(1.3384,3)
# 四舍五入
round2(1.3395,3)
round(1.3395,3)
# 四舍五入
round2(1.3395,3)
round(1.3395,3)
round2
# 四舍五入
round2(1.3395,3)
round(1.3395,3)
# 四舍五入
round2(1.395,2)
round(1.395,2)
# 四舍五入
round2(1.385,2)
round(1.385,2)
# 四舍五入
round2(1.35,1)
round(1.35,1)
# 四舍五入
round2(1.25,1)
round(1.25,1)
# irt之前的重编码数据，使数据从0开始。
recode2(c(1,2,4,5))
# 归一化
scaleone(c(1.2,2,1,1,0,0)) # x需为z分数
toone(rnorm(10)) # 任意分数归一化
# Z转3等级
zto3(c(1.2,2,1,1,0,0)) #zscore must be a matrix or data.frame
# 归一化
scaleone(seq(-3,3,0.5)) # x需为z分数
# Z转3等级
zto3(data.frame(x1=seq(-3,3,0.5),x2=seq(-3,3,0.5))) #zscore must be a matrix or data.frame
# 根据四分位数转4等级
torank(seq(-3,3,0.1)) # input_data is a vector
# outlier处理
cap_outlier(seq(-3,3,0.1))
# 百分等级
percentile_rank(seq(-3,3,0.1))
# 几何平均数
geom_mean(c(40,52,65,75,86,97))
# same as:
psych::geometric.mean(c(1.3,1.25,1.154,1.147,1.128))
geom_mean(data.frame(d1=c(40,52,65,75,86,97),d2=c(40,52,65,75,86,97)),by_row=F)
data <- data.frame(x = paste0("班级", 1:10), y = rnorm(10, 0, 5))
# 增值量柱状图
bar_1(data) + theme_bw()
# macbook needs to set font style
fontset()
bar_1(data) + theme_bw()
data(plot_dat)
dat <- parallel_dat
parallel_adv(data = dat, varss = c("作业顺序_", unique(ftable$能力)), group = "学校名称")
View(dat)
View(parallel_dat)
View(dat)
parallel_adv(data = dat, varss = c("作业顺序_", colnames(dat)[3:11]), group = "学校名称")
stack_plot_cut_v
stack_plot_cut_v <- function(data = dat_p,
x = x,
y = y,
label = label,
fill = fill,
facet_rows = NULL) {
p <- ggplot(data = data, aes(x = x, y = y, label = label)) +
geom_bar(aes(fill = fill), stat = "identity", width = 0.7, position = position_stack(reverse = T)) +
labs(x = "", y = "") +
scale_fill_discrete_diverging(palette = "Tropic", rev = T, labels = c(LETTERS[4:1])) +
guides(fill = guide_legend(title = "", reverse = F, byrow = T)) +
scale_x_continuous(
limits = c(-1.09, 1.09), breaks = seq(-1, 1, 0.2),
labels = c("100%", "80%", "60%", "40%", "20%", "0%", "20%", "40%", "60%", "80%", "100%"), expand = c(0, 0)
) +
scale_y_discrete(expand = c(0, 0)) +
geom_text(angle = 45, vjust = -0.8, position = position_stack(0.5), size = 2.8, check_overlap = F) +
geom_vline(xintercept = c(0))
if (!is.null(facet_rows)) {
p + facet_grid(rows = vars(get(facet_rows))) +
theme(
strip.background = element_rect(color = "black", size = 1.5, linetype = "solid"),
strip.text.x = element_text(size = 10, face = "bold")
)
} else {
p
}
}
# 水平D等级分界-堆积条形图
data(plot_dat)
dat <- stack_plot_dat
stack_plot_cut_v(
data = dat, y = dat$班级,
x = ifelse(dat$标签 %in% c("1"), -dat$率, dat$率), label = dat$率x, fill = factor(dat$标签), facet_rows = "维度"
) + theme_bw()
theme_plot1
theme_plot1 <- function() {
theme_bw() +
theme(
text = element_text(family = "CNfont", size = 8),
# legend
legend.key.size = unit(8, "pt"),
legend.box.spacing = unit(-0.05, "cm"),
legend.position = "top",
# legend.position="bottom",
# legend.box = "vertical",
legend.background = element_blank(),
panel.grid=element_blank(),
# layout
plot.title = element_text(hjust = 0.5),
plot.margin = unit(c(0.1, 0.5, 0.1, 0.1), "cm"),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background = element_blank(),
# lab
axis.line = element_line(),
axis.title.y = (element_text(size = 8)),
axis.text.x = (element_text(size = 8, angle = 25)),
# axis.title.y=element_text(angle=360,size=9,vjust=0.5),
axis.text.y = (element_text(size = 8))
)
}
stack_plot_cut_v(
data = dat, y = dat$班级,
x = ifelse(dat$标签 %in% c("1"), -dat$率, dat$率), label = dat$率x, fill = factor(dat$标签), facet_rows = "维度"
) + theme_plot1()
